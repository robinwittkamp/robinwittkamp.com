{
  "root": true,
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "next",
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "airbnb",
    "airbnb/hooks",
    "airbnb-typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": [
    "react",
    "simple-import-sort",
    "@typescript-eslint"
  ],
  "rules": {
    // Only allow React in tsx files
    "react/jsx-filename-extension": [1, { "extensions": [".tsx"] }],
    // Don't require state initialization in constructor (Functional components are used)
    "react/state-in-constructor": "off",
    // Turn off need for default props (TypeScript is used for type checking)
    "react/require-default-props": "off",
    // Only allow arrow functions for React components
    "react/function-component-definition": [2, {
      "namedComponents": "arrow-function",
      "unnamedComponents": "arrow-function"
    }],
    // Allow no props spreading (needed for _app.tsx)
    "react/jsx-props-no-spreading": "off",
    // Don't require React import (Next.js does it automatically)
    "react/react-in-jsx-scope": "off",
    // Allow "jsx global" in _app.tsx
    "react/no-unknown-property": [
      2,
      {
        "ignore": [
          "jsx", "global"
        ]
      }
    ],
    // Display wrong import order as errors
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    // React hook form fix
    "@typescript-eslint/no-misused-promises": [2, {
      "checksVoidReturn": {
        "attributes": false
      }
    }]
  }
}
